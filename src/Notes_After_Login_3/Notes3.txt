//...............................................................................................................
//...............................................................................................................
//"Implementing Rich Text Editor in React"
steps 1:- use JoditEditor from jodit-react

npm install jodit-react

step 2:-

import React, { useRef } from 'react';
import JoditEditor from 'jodit-react';

const editor=useRef(null);
const[content,setContent]=useState('');



//Note :-use <JoditEditor/> instead of <input/>
       /> */}
<JoditEditor
			ref={editor}
			value={content}
tabIndex={1} // tabIndex of textarea
			onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons
			onChange={newContent => {}}
		/>


//...............................................................................................................
//...............................................................................................................
//use JoditEditor and save the value into database(full code).
import { Card, CardBody, Input, Form, Label, Container, Button } from "reactstrap";
import Base from "./Base";
import { loadAllCategories } from "../services/category-service";
import { useEffect, useState, useRef } from "react";
import JoditEditor from "jodit-react";

const AddPost = () => {
  const editor = useRef(null);
 
  const [post, setPost] = useState({
    title: "",
    content: "",
    categoryid: ""
  });
  const [categories, setCategories] = useState([]);



  useEffect(() => {
    loadAllCategories()
      .then((data) => {
        console.log(data);
        setCategories(data);
      })
      .catch((error) => {
        console.log(error);
      });
  }, []);

  const fieldChanged = (event) => {
    setPost({
      ...post,
      [event.target.name]: event.target.value,
    });
  };

  const contentFieldChanged = (newContent) => {
    setPost({ ...post, content: newContent });

   
  };

  return (
    <div className="wrapper my-3">
      <Card className="shadow mt-3">
        <CardBody>
          {JSON.stringify(post)}
          <h3>What's going on in your mind?</h3>
          <Form>
            <div className="my-3">
              <Label for="title">Post Title</Label>
              <Input
                type="text"
                id="title"
                placeholder="Enter Here"
                className="rounded-0"
                name="title"
                onChange={fieldChanged}
              />
            </div>

            <div className="my-3">
              <Label for="content">Post Content</Label>
              <JoditEditor
                ref={editor}
                value={post.content}
                tabIndex={1}
                onChange={contentFieldChanged} // Use onBlur for better compatibility
              />
            </div>

            <div className="my-3">
              <Label for="category">Post Category</Label>
              <Input
                type="select"
                id="category"
                className="rounded-0"
                name="categoryid"
                onChange={fieldChanged}
              >
                <option value="">Select a category</option> {/* Placeholder option */}
                {categories.map((category) => (
                  <option value={category.Id} key={category.Id}>
                    {category.CategoryName}
                  </option>
                ))}
              </Input>
            </div>

            <Container className="text-center">
              <Button className="rounded-0" color="primary" type=submit >
                Create Post
              </Button>
              <Button className="rounded-0 ms-2" color="danger">
                Reset
              </Button>
            </Container>
          </Form>
        </CardBody>
      </Card>
    </div>
  );
};

export default AddPost;



//...............................................................................................................
//...............................................................................................................
//............................................................................................
//............................................................................................
Imp Note:-
if we create a function like given below:-
-->
const [post, setPost] = useState({
    title: "",
    content: "",
    categoryid: ""
  });
-->
 const contentFieldChanged = (newContent) => {
    setPost({ ...post, content: newContent });
  };
-->
    <div className="my-3">
              <Label for="content">Post Content</Label>
              <JoditEditor
                ref={editor}
                value={post.content}
                tabIndex={1}
                onChange={contentFieldChanged} // Use onBlur for better compatibility
              />
            </div>

Note:- here we are using onChange={contentFieldChanged} ,in this we are not passing any event,but in given code we are passing as event as 'newContent' ,why?

const contentFieldChanged = (newContent) => {
    setPost({ ...post, content: newContent });
  };

its becoz when we use  onChange={contentFieldChanged},it automaticaly takes an event,you can also pass but it will take automaticaly if you dont pass.
//............................................................................................
//............................................................................................

